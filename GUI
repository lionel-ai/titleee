# titleee

import numpy as np
import matplotlib.pyplot as plt
import mpl_toolkits.axisartist as axisartist


a = 1


def pltz1():
    import math

    fig = plt.figure(figsize=(10, 8), dpi=80)
    ax1 = axisartist.Subplot(fig, 111)
    fig.add_axes(ax1)

    ax1.axis[:].set_visible(False)
    ax1.axis["x"] = ax1.new_floating_axis(0, 0)

    ax1.axis["x"].set_axisline_style("->", size=1.0)
    ax1.axis["y"] = ax1.new_floating_axis(1, 0)
    ax1.axis["y"].set_axisline_style("->", size=1.0)
    ax1.axis["x"].set_axis_direction("top")
    ax1.axis["y"].set_axis_direction("right")

    x = np.arange(-4, 5)
    y=(x>=0)

    plt.stem(x, y)
    plt.show()

def pltz2():
    import math

    fig = plt.figure(figsize=(10, 8), dpi=80)
    ax1 = axisartist.Subplot(fig, 111)
    fig.add_axes(ax1)

    ax1.axis[:].set_visible(False)
    ax1.axis["x"] = ax1.new_floating_axis(0, 0)

    ax1.axis["x"].set_axisline_style("->", size=1.0)
    ax1.axis["y"] = ax1.new_floating_axis(1, 0)
    ax1.axis["y"].set_axisline_style("->", size=1.0)
    ax1.axis["x"].set_axis_direction("top")
    ax1.axis["y"].set_axis_direction("right")

    x = np.arange(-4, 5)
    y=(x==0)

    plt.stem(x, y)
    plt.show()

def pltz3():
    import math

    fig = plt.figure(figsize=(10, 8), dpi=80)
    ax1 = axisartist.Subplot(fig, 111)
    fig.add_axes(ax1)

    ax1.axis[:].set_visible(False)
    ax1.axis["x"] = ax1.new_floating_axis(0, 0)

    ax1.axis["x"].set_axisline_style("->", size=1.0)
    ax1.axis["y"] = ax1.new_floating_axis(1, 0)
    ax1.axis["y"].set_axisline_style("->", size=1.0)
    ax1.axis["x"].set_axis_direction("top")
    ax1.axis["y"].set_axis_direction("right")

    x = np.arange(-4, 4)

    y = np.sin(x)

    plt.stem(x, y)
    plt.show()

def pltz4():
    import math

    fig = plt.figure(figsize=(10, 8), dpi=80)
    ax1 = axisartist.Subplot(fig, 111)
    fig.add_axes(ax1)

    ax1.axis[:].set_visible(False)
    ax1.axis["x"] = ax1.new_floating_axis(0, 0)

    ax1.axis["x"].set_axisline_style("->", size=1.0)
    ax1.axis["y"] = ax1.new_floating_axis(1, 0)
    ax1.axis["y"].set_axisline_style("->", size=1.0)
    ax1.axis["x"].set_axis_direction("top")
    ax1.axis["y"].set_axis_direction("right")

    x = np.arange(-3, 6)
    y = x*(x>=0)

    plt.stem(x, y)
    plt.show()

def button():
    import tkinter as tk
    from tkinter import ttk

    win = tk.Tk()

    win.geometry("400x300")
    win.title('信号')

    aLabel = ttk.Label(win, text='信号类型')
    aLabel.grid(column=0, row=0)

    action1 = ttk.Button(win, text='单位阶跃离散信号',command=pltz1)
    action1.grid(column=1, row=0)

    action2 = ttk.Button(win, text='单位脉冲离散信号', command=pltz2)
    action2.grid(column=1, row=1)

    action3 = ttk.Button(win, text='离散正弦信号', command=pltz3)
    action3.grid(column=1, row=2)

    action4 = ttk.Button(win, text='单位离散斜坡信号', command=pltz4)
    action4.grid(column=1, row=3)

    win.mainloop()

button()
